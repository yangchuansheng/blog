<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>开始 on Envoy 中文指南</title><link>https://fuckcloudnative.io/envoy-handbook/docs/gettingstarted/</link><description>Recent content in 开始 on Envoy 中文指南</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>&amp;copy;{year}. &lt;a href='https://fuckcloudnative.io'>云原生实验室&lt;/a></copyright><lastBuildDate>Sat, 02 May 2020 15:27:54 +0800</lastBuildDate><atom:link href="https://fuckcloudnative.io/envoy-handbook/docs/gettingstarted/index.xml" rel="self" type="application/rss+xml"/><item><title>安装</title><link>https://fuckcloudnative.io/envoy-handbook/docs/gettingstarted/setup/</link><pubDate>Sat, 02 May 2020 15:27:54 +0800</pubDate><guid>https://fuckcloudnative.io/envoy-handbook/docs/gettingstarted/setup/</guid><description>GetEnvoy Envoy 本身是很难编译的，需要使用到项目构建工具 Bazel，为了解决这个问题，Tetrate 的工程师（包括 Envoy 的核心贡献者和维护者）发起了 GetEnvoy 项目，</description></item><item><title>快速开始</title><link>https://fuckcloudnative.io/envoy-handbook/docs/gettingstarted/quick-start/</link><pubDate>Sat, 02 May 2020 15:27:54 +0800</pubDate><guid>https://fuckcloudnative.io/envoy-handbook/docs/gettingstarted/quick-start/</guid><description>安装完成后，可以通过下面的例子快速体验 Envoy 的功能。 本文的示例使用 Envoy 作为边缘代理，根据不同的路由配置将请求转发到百度和 Bing。指定请求头 host: baidu.com 时</description></item><item><title>Envoy 架构与配置结构</title><link>https://fuckcloudnative.io/envoy-handbook/docs/gettingstarted/architecture/</link><pubDate>Sat, 02 May 2020 15:27:54 +0800</pubDate><guid>https://fuckcloudnative.io/envoy-handbook/docs/gettingstarted/architecture/</guid><description>Envoy 架构 Envoy 的架构如图所示： Envoy 接收到请求后，会先走 FilterChain，通过各种 L3/L4/L7 Filter 对请求进行微处理，然后再路由到指定的集群，并通过负载均衡获</description></item></channel></rss>